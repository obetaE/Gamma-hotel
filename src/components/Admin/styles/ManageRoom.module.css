.container {
    --primary-bg: #1b0136;
    --secondary-bg: #31203a;
    --accent: #8c18a7;
    --deep-magenta: #45062b;
    --light-neutral: #f4e8ff;
    --neon-pink: #ff1493;
    --neon-glow: 0 0 15px rgba(255, 20, 147, 0.5);
    --success: #4CAF50;
    --error: #f44336;
    --warning: #ff9800;
  
    background: var(--primary-bg);
    min-height: 100vh;
    padding: 2rem;
    /* font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; */
    color: white;
  }
  
  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }
  
  .title {
    font-size: 2.5rem;
    color: var(--accent);
    margin: 0;
  }
  
  .addButton {
    background: linear-gradient(135deg, var(--neon-pink), var(--accent));
    color: white;
    border: none;
    border-radius: 50px;
    padding: 0.8rem 1.5rem;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
    box-shadow: var(--neon-glow);
  }
  
  .addButton:hover {
    transform: translateY(-2px);
    box-shadow: 0 0 20px rgba(255, 20, 147, 0.7);
  }
  
  .roomsGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 2rem;
  }
  
  .card {
    background: var(--secondary-bg);
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
  }
  
  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.4);
  }
  
  .cardHeader {
    display: flex;
    justify-content: space-between;
    padding: 1.2rem 1.2rem 0.5rem;
  }
  
  .roomName {
    font-size: 1.4rem;
    font-weight: bold;
    color: var(--light-neutral);
  }
  
  .statusAvailable, .statusUnavailable {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: bold;
  }
  
  .statusAvailable {
    background: rgba(76, 175, 80, 0.2);
    color: var(--success);
  }
  
  .statusUnavailable {
    background: rgba(244, 67, 54, 0.2);
    color: var(--error);
  }
  
  .imgContainer {
    position: relative;
    height: 200px;
  }
  
  .imageWrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }
  
  .image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .priceTag {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: bold;
    font-size: 1.2rem;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  }
  
  .priceTag span {
    font-size: 0.8rem;
    font-weight: normal;
    opacity: 0.8;
  }
  
  .cardBody {
    padding: 1.2rem;
    flex-grow: 1;
  }
  
  .tagline {
    color: var(--neon-pink);
    font-size: 1.1rem;
    margin: 0.5rem 0 1rem;
    font-style: italic;
  }
  
  .rating {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    margin: 1rem 0;
  }
  
  .stars {
    display: flex;
    gap: 0.2rem;
  }
  
  .amenitiesPreview {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }
  
  .amenity {
    background: rgba(255, 255, 255, 0.1);
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.85rem;
  }
  
  .moreAmenities {
    background: rgba(255, 20, 147, 0.2);
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.85rem;
    color: var(--neon-pink);
  }
  
  .cardFooter {
    display: flex;
    justify-content: space-between;
    padding: 1rem 1.2rem;
    background: rgba(0, 0, 0, 0.2);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .viewButton {
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: none;
    border-radius: 50px;
    padding: 0.6rem 1.2rem;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .viewButton:hover {
    background: rgba(255, 255, 255, 0.2);
  }
  
  .actionButtons {
    display: flex;
    gap: 0.5rem;
  }
  
  .editButton, .deleteButton {
    min-width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .editButton {
    background: rgba(255, 152, 0, 0.2);
    color: var(--warning);
  }
  
  .deleteButton {
    background: rgba(244, 67, 54, 0.2);
    color: rgb(255, 255, 255);
  }
  
  .editButton:hover {
    background: rgba(255, 152, 0, 0.4);
  }
  
  .deleteButton:hover {
    background: rgba(244, 67, 54, 0.4);
  }
  
  /* Modal Styles */
  .modalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
  }
  
  .modal {
    background: var(--secondary-bg);
    border-radius: 16px;
    width: 90%;
    max-width: 900px;
    max-height: 90vh;
    overflow: hidden;
    box-shadow: 0 0 30px rgba(255, 20, 147, 0.3);
    display: flex;
    flex-direction: column;
  }
  
  .closeButton {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: transparent;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all 0.3s ease;
  }
  
  .closeButton:hover {
    background: rgba(255, 255, 255, 0.1);
  }
  
  .modalContent {
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow: auto;
  }
  
  .modalHeader {
    padding: 1.5rem 1.5rem 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .modalHeader h2 {
    margin: 0;
    color: var(--light-neutral);
  }
  
  .editToggle {
    background: transparent;
    border: 1px solid var(--neon-pink);
    color: var(--neon-pink);
    padding: 0.5rem 1rem;
    border-radius: 50px;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .editToggle:hover {
    background: rgba(255, 20, 147, 0.1);
  }
  
  .modalBody {
    display: flex;
    padding: 1.5rem;
    gap: 2rem;
    overflow-y: scroll;
    flex: 1;
  }
  
  .modalImage {
    flex: 1;
  }
  
  .modalImage .imageWrapper {
    height: 300px;
    border-radius: 12px;
    overflow: hidden;
  }
  
  .roomDetails {
    flex: 2;
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
  }
  
  .description {
    line-height: 1.6;
    opacity: 0.9;
  }
  
  .detailRow {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 0.5rem;
  }
  
  .amenitiesSection {
    margin-top: 1rem;
  }
  
  .amenitiesList {
    display: flex;
    flex-wrap: wrap;
    gap: 0.8rem;
    margin-top: 0.8rem;
  }
  
  .amenityTag {
    background: rgba(255, 255, 255, 0.1);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .amenityTag button {
    background: transparent;
    border: none;
    color: var(--error);
    cursor: pointer;
    font-size: 1.1rem;
    line-height: 1;
  }
  
  /* Edit Form Styles */
  .editForm {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .formGroup {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .formGroup label {
    font-weight: bold;
    color: var(--light-neutral);
  }
  
  .formGroup input, .formGroup textarea {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 0.8rem;
    color: white;
    font-size: 1rem;
    width: 100%;
  }
  
  .formGroup textarea {
    min-height: 100px;
    resize: vertical;
  }
  
  .amenityInput {
    display: flex;
    gap: 0.5rem;
  }
  
  .amenityInput input {
    flex: 1;
  }
  
  .amenityInput button {
    background: var(--neon-pink);
    color: white;
    border: none;
    border-radius: 8px;
    padding: 0 1rem;
    cursor: pointer;
  }
  
  .statusToggle {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 24px;
  }
  
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 24px;
  }
  
  .slider:before {
    position: absolute;
    content: "";
    height: 16px;
    width: 16px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
  }
  
  input:checked + .slider {
    background-color: var(--success);
  }
  
  input:checked + .slider:before {
    transform: translateX(26px);
  }
  
  .modalFooter {
    padding: 1.5rem;
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .saveButton, .cancelButton, .deleteButton {
    padding: 0.8rem 1.5rem;
    border-radius: 50px;
    border: none;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
  }
  
  .saveButton {
    background: var(--success);
    color: white;
  }
  
  .saveButton:hover {
    background: #3d8b40;
  }
  
  .cancelButton {
    background: rgba(255, 255, 255, 0.1);
    color: white;
  }
  
  .cancelButton:hover {
    background: rgba(255, 255, 255, 0.2);
  }
  
  .deleteButton {
    background: rgba(244, 67, 54, 0.2);
    color: var(--error);
    border: 1px solid var(--error);
  }
  
  .deleteButton:hover {
    background: rgba(244, 67, 54, 0.3);
  }

.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 60vh;
  gap: 1rem;
}

.spinner {
  animation: spin 1s linear infinite;
  font-size: 2.5rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 60vh;
  gap: 1rem;
  text-align: center;
  padding: 2rem;
}

.retryButton {
  background: var(--accent);
  color: white;
  border: none;
  padding: 0.8rem 1.5rem;
  border-radius: 30px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
}

.retryButton:hover {
  background: #7a1597;
}

.noRooms {
  text-align: center;
  padding: 3rem;
  background: rgba(49, 32, 58, 0.5);
  border-radius: 12px;
  margin-top: 2rem;
  font-size: 1.2rem;
}

.formError {
  background: rgba(244, 67, 54, 0.15);
  color: var(--error);
  padding: 0.8rem;
  border-radius: 8px;
  margin-bottom: 1.5rem;
  border-left: 3px solid var(--error);
}
  
  /* Responsive */
  @media (max-width: 768px) {
    .modalBody {
      flex-direction: column;
    }
    
    .modalImage .imageWrapper {
      height: 200px;
    }
    
    .header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }
    
    .roomsGrid {
      grid-template-columns: 1fr;
    }
  }